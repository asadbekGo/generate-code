syntax="proto3";

package storehouse_service;
option go_package="genproto/storehouse_service";

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";

service ChapterMachineService {
    rpc CreateChapterMachine(CreateChapterMachineRequest) returns (ChapterMachine) {}
    rpc GetByIDChapterMachine(ChapterMachinePrimaryKey) returns (ChapterMachine) {}
    rpc GetListChapterMachine(GetListChapterMachineRequest) returns (GetListChapterMachineResponse) {}
    rpc UpdateChapterMachine(UpdateChapterMachineRequest) returns (ChapterMachine) {}
    rpc UpdatePatchChapterMachine(UpdatePatchChapterMachineRequest) returns (ChapterMachine) {}
    rpc DeleteChapterMachine(ChapterMachinePrimaryKey) returns (google.protobuf.Empty) {}
}

message ChapterMachinePrimaryKey {
    string id = 1;
}

message ChapterMachine {
    string id = 1;
    string name = 2;
    string created_at = 3;
    string updated_at = 4;
}

message CreateChapterMachineRequest {
    string name = 1;
}

message UpdateChapterMachineRequest {
    string id = 1;
    string name = 2;
}

message UpdatePatchChapterMachineRequest {
    string id = 1;
    google.protobuf.Struct fields = 2;
}

message GetListChapterMachineRequest {
    int32 limit = 1;
    int32 offset = 2;
    string search = 3;
}

message GetListChapterMachineResponse {
    int32 count = 1;
    repeated ChapterMachine chapter_machines = 2;
}
