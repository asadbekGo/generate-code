syntax="proto3";

package storehouse_service;
option go_package="genproto/storehouse_service";

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";

service WriteOffService {
    rpc CreateWriteOff(CreateWriteOffRequest) returns (WriteOff) {}
    rpc GetByIDWriteOff(WriteOffPrimaryKey) returns (WriteOff) {}
    rpc GetListWriteOff(GetListWriteOffRequest) returns (GetListWriteOffResponse) {}
    rpc UpdateWriteOff(UpdateWriteOffRequest) returns (WriteOff) {}
    rpc UpdatePatchWriteOff(UpdatePatchWriteOffRequest) returns (WriteOff) {}
    rpc DeleteWriteOff(WriteOffPrimaryKey) returns (google.protobuf.Empty) {}
}

message WriteOffPrimaryKey {
    string id = 1;
}

message WriteOff {
    string id = 1;
    int32 write_off_id = 2;
    string barcode = 3;
    int32 product_number = 4;
    int32 quantity = 5;
    string size_type = 6;
    double size_value = 7;
    string weight_type = 8;
    double weight_value = 9;
    string date_time = 10;
    string product_id = 11;
    string machine_id = 12;
    string branch_id = 13;
    string created_at = 14;
    string updated_at = 15;
}

message CreateWriteOffRequest {
    int32 write_off_id = 1;
    string barcode = 2;
    int32 product_number = 3;
    int32 quantity = 4;
    string size_type = 5;
    double size_value = 6;
    string weight_type = 7;
    double weight_value = 8;
    string date_time = 9;
    string product_id = 10;
    string machine_id = 11;
    string branch_id = 12;
}

message UpdateWriteOffRequest {
    string id = 1;
    int32 write_off_id = 2;
    string barcode = 3;
    int32 product_number = 4;
    int32 quantity = 5;
    string size_type = 6;
    double size_value = 7;
    string weight_type = 8;
    double weight_value = 9;
    string date_time = 10;
    string product_id = 11;
    string machine_id = 12;
    string branch_id = 13;
}

message UpdatePatchWriteOffRequest {
    string id = 1;
    google.protobuf.Struct fields = 2;
}

message GetListWriteOffRequest {
    int32 limit = 1;
    int32 offset = 2;
    string search = 3;
}

message GetListWriteOffResponse {
    int32 count = 1;
    repeated WriteOff write_offs = 2;
}
